{"version":3,"file":"main.8a6d77349ecf11759ff2.bundle.js","sources":["webpack:///./src/components/TaskList.stories.js"],"sourcesContent":["import React from 'react';\nimport { storiesOf } from '@storybook/react';\n\nimport { PureTaskList } from './TaskList';\nimport { task, actions } from './Task.stories';\n\nexport const defaultTasks = [\n  { ...task, id: '1', title: 'Task 1' },\n  { ...task, id: '2', title: 'Task 2' },\n  { ...task, id: '3', title: 'Task 3' },\n  { ...task, id: '4', title: 'Task 4' },\n  { ...task, id: '5', title: 'Task 5' },\n  { ...task, id: '6', title: 'Task 6' },\n];\n\nexport const withPinnedTasks = [\n  ...defaultTasks.slice(0, 5),\n  { id: '6', title: 'Task 6 (pinned)', state: 'TASK_PINNED' },\n];\n\n// addDecorator allows us to add some 'context' to the rendering of each\n// task.  In this case, we add padding around the list to make it\n// easier to visually verify\nstoriesOf('TaskList', module)\n  .addDecorator(story => <div style={{ padding: '3rem' }}>{story()}</div>)\n  .add('default', () => <PureTaskList tasks={defaultTasks} {...actions} />)\n  .add('withPinnedTasks', () => <PureTaskList tasks={withPinnedTasks} {...actions} />)\n  .add('loading', () => <PureTaskList loading tasks={[]} {...actions} />)\n  .add('empty', () => <PureTaskList tasks={[]} {...actions} />);\n\n// We can use Jest to render the story to the DOM and run some DOM querying code to verify salient\n// features of the output\n"],"mappings":"AAMA","sourceRoot":""}